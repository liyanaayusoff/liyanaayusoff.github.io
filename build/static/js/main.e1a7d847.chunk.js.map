{"version":3,"sources":["index.js"],"names":["imageUpload","document","getElementById","resultElement","_callee2","model","C_Users_User_Desktop_TFJS_object_detection_master_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","wrap","_context2","prev","next","cocossd","sent","addEventListener","Object","C_Users_User_Desktop_TFJS_object_detection_master_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","mark","_callee","img","predictions","_context","loadImage","files","detect","innerHTML","forEach","prediction","p","createElement","innerText","concat","class","Math","round","score","appendChild","stop","_callee3","src","_context3","abrupt","Promise","resolve","reject","Image","onload","tf","fromPixels","onerror","err","URL","createObjectURL","run"],"mappings":"iLAGMA,EAAcC,SAASC,eAAe,eACtCC,EAAgBF,SAASC,eAAe,qDAE9C,SAAAE,IAAA,IAAAC,EAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACsBC,SADtB,OACQP,EADRI,EAAAI,KAGEb,EAAYc,iBAAiB,SAA7BC,OAAAC,EAAA,EAAAD,CAAAT,EAAAC,EAAAU,KAAuC,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAd,EAAAC,EAAAC,KAAA,SAAAa,GAAA,cAAAA,EAAAX,KAAAW,EAAAV,MAAA,cAAAU,EAAAV,KAAA,EAEnBW,EAAUtB,EAAYuB,MAAM,IAFT,cAE/BJ,EAF+BE,EAAAR,KAAAQ,EAAAV,KAAA,EAKXN,EAAMmB,OAAOL,GALF,OAK/BC,EAL+BC,EAAAR,KAQrCV,EAAcsB,UAAY,GAC1BL,EAAYM,QAAQ,SAAAC,GAClB,IAAMC,EAAI3B,SAAS4B,cAAc,KACjCD,EAAEE,UAAF,GAAAC,OAAiBJ,EAAWK,MAA5B,YAAAD,OAA4CE,KAAKC,MAAM,IAAMP,EAAWQ,OAAxE,iBACAhC,EAAciC,YAAYR,KAZS,wBAAAP,EAAAgB,SAAAnB,OAHzC,wBAAAT,EAAA4B,SAAAjC,sCAoBekB,+EAAf,SAAAgB,EAAyBC,GAAzB,OAAAjC,EAAAC,EAAAC,KAAA,SAAAgC,GAAA,cAAAA,EAAA9B,KAAA8B,EAAA7B,MAAA,cAAA6B,EAAAC,OAAA,SACS,IAAIC,QAAQ,SAACC,EAASC,GAC3B,IAAMzB,EAAM,IAAI0B,MAChB1B,EAAI2B,OAAS,kBAAMH,EAAQI,IAAWC,WAAW7B,KACjDA,EAAI8B,QAAU,SAACC,GAAD,OAASN,EAAOM,IAC9B/B,EAAIoB,IAAMY,IAAIC,gBAAgBb,MALlC,wBAAAC,EAAAH,SAAAC,iEASAe","file":"static/js/main.e1a7d847.chunk.js","sourcesContent":["import * as tf from '@tensorflow/tfjs';\nimport * as cocossd from '@tensorflow-models/coco-ssd';\n\nconst imageUpload = document.getElementById('imageUpload');\nconst resultElement = document.getElementById('output');\n\nasync function run() {\n  const model = await cocossd.load();\n\n  imageUpload.addEventListener('change', async () => {\n    // Load image\n    const img = await loadImage(imageUpload.files[0]);\n\n    // Make a prediction with Coco SSD model\n    const predictions = await model.detect(img);\n\n    // Display the predictions\n    resultElement.innerHTML = '';\n    predictions.forEach(prediction => {\n      const p = document.createElement('p');\n      p.innerText = `${prediction.class} - with ${Math.round(100 * prediction.score)}% confidence.`;\n      resultElement.appendChild(p);\n    });\n  });\n}\n\nasync function loadImage(src) {\n  return new Promise((resolve, reject) => {\n    const img = new Image();\n    img.onload = () => resolve(tf.browser.fromPixels(img));\n    img.onerror = (err) => reject(err);\n    img.src = URL.createObjectURL(src);\n  });\n}\n\nrun();\n"],"sourceRoot":""}